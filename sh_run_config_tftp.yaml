---
- name: Backup Cisco Switch Configuration to TFTP
  hosts: Switch01
  gather_facts: yes

  vars:
    tftp_server: "192.168.100.132"
    tftp_directory: "/var/lib/tftpboot/backups"
    config_filename: "backups/switch_show_run_{{ inventory_hostname }}_{{ timestamp }}.txt"  # Fixed filename for the same switch

  tasks:
    - name: Generate a timestamp
      set_fact:
        timestamp: "{{ now().strftime('%Y%m%d') }}" # wenn man stunden und minuten will, muss man halt noch dazuschreiben, sonst nur tag monat jahr

    - name: Prüfen, ob eine alte Datei existiert
      delegate_to: localhost  # Auf dem Ansible-Controller ausführen
      ansible.builtin.stat:
        path: "{{ tftp_directory }}/switch_show_run_{{ inventory_hostname }}_*.txt"
      register: old_file_check

    - name: Löschen der alten Datei, falls vorhanden
      delegate_to: localhost  # Auf dem Ansible-Controller ausführen
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      when: old_file_check.stat.exists
      loop: "{{ lookup('fileglob', tftp_directory + '/switch_show_run_' + inventory_hostname + '_*.txt').split(',') }}

    - name: Backup der Running-Config zum TFTP-Server
      cisco.ios.ios_command:
        commands:
          - command: "copy running-config tftp://{{ tftp_server }}/{{ config_filename }}"
            prompt:
              - "Address or name of remote host"
              - "Destination filename"
            answer:
              - "\n"
              - "\n"
        wait_for:
          - "result[0] contains 'bytes copied in'"
      register: backup_result
      timeout: 60

    - name: Ergebnis anzeigen
      ansible.builtin.debug:
        var: backup_result
